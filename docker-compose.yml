version: "3.5"
services:
  web:
    container_name: ${APP_NAME}
    hostname: ${APP_NAME}
    networks:
      - LAN
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        - LS_HOST=${LS_HOST}:${LS_PORT1}
    ports:
      - ${APP_PORT}:8080
    volumes:
      - ./:/var/www/html/
    depends_on:
      - logstash

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: ${ES_HOST}
    hostname: ${ES_HOST}
    ports:
      - "${ES_PORT1}:9200"
      - "${ES_PORT2}:9300"
    environment:
      ES_JAVA_OPTS: "-Xms256m -Xmx256m"
    networks:
      - LAN

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    container_name: ${LS_HOST}
    hostname: ${LS_HOST}
    ports:
      - "${LS_PORT1}:5000"
      - "${LS_PORT2}:9600"
    depends_on:
      - elasticsearch
    environment:
      LS_JAVA_OPTS: "-Xms256m -Xmx256m"
      ES_HOST: ${ES_HOST}
    volumes:
      - ./ELK/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./ELK/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./ELK/logstash/inputFile/:/home/inputFile
    networks:
      - LAN

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    container_name: ${KB_HOST}
    hostname: ${KB_HOST}
    ports:
      - "${KB_PORT}:5601"
    depends_on:
      - elasticsearch
    environment:
      SERVER_NAME: ${KB_HOST}
      ELASTICSEARCH_URL: http://${ES_HOST}:${ES_PORT1}
    networks:
      - LAN

networks:
  LAN:
    driver: bridge
    name: web_elk_LAN
